class User:

    def __init__(self, name=None, phone=None, email=None, address=None, age=None):
        self.name = name
        self.phone = phone
        self.email = email
        self.address = address
        self.age = age

        print('User Object Created...')

    def input_user_details(self):
        self.name = input('Enter Your Name: ')
        self.phone = input('Enter Your Phone: ')
        self.email = input('Enter Your Email: ')
        self.address = input('Enter Your Address: ')
        self.age = int(input('Enter Your Age: '))

    # def __str__(self): you have to return string
    def show(self):
        print('~~~~~~~~~~{} Details~~~~~~~~~~'.format(self.name))
        data = 'Phone: {phone} | Email: {email}\nAddress: {address} Age: {age}'.format_map(vars(self))
        print(data)

    def to_document(self):
        # Return Dictionary representation of the User Object :)
        return vars(self)



from pymongo.mongo_client import MongoClient


def main():
    uri = "mongodb+srv://Savreet_28:Savreet28@cluster1.yyi1481.mongodb.net/?retryWrites=true&w=majority&appName=Cluster1"
    # Create a new client and connect to the server
    client = MongoClient(uri)
    print('1. Connection Created with MongoDB :)')

    user = User()
    user.input_user_details()
    user.show()
    print('2. User Created with Data :)')

    user_document = user.to_document()
    print(user_document)
    print('3. User Converted to Document/Dictionary :)')

    # Use Database:
    db = client['gw2025']

    # Insert Operation
    result = db['users'].insert_one(user_document)
    print('4. User Document Saved in MongoDB :)')
    print('result:', result, type(result))

    # Fetch Operation
    documents = db['users'].find()
    for documet in documents:
        print(documet)


if __name__ == '__main__':
    main()
