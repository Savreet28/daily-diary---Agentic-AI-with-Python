# webapp model - VisitorApp


import os
import datetime

class Visitor:
    def __init__(self, serial_no=None, name=None, phone=None, address=None, whome_to_meet=None, purpose=None):
        self.serial_no = serial_no
        self.name = name
        self.phone = phone
        self.address = address
        self.whome_to_meet = whome_to_meet
        self.purpose = purpose
        self.date_time_stamp = str(datetime.datetime.now())

    def input_visitor_details(self):
        self.name = input('Enter Your Name: ')
        self.phone = input('Enter Your Phone: ')
        self.address = input('Enter Your Address: ')
        self.whome_to_meet = input('Enter Person to Meet: ')
        self.purpose = input('Enter Purpose of your Meeting: ')

    def __str__(self):
        return '{},{},{},{},{},{},{}\n'.format(
            self.serial_no,
            self.date_time_stamp,
            self.name,
            self.phone,
            self.address,
            self.whome_to_meet,
            self.purpose
        )
# Controller using OOPS
class FileHelper:
    def __init__(self):
        self.visitor_file_path = 'visitor-log.csv'
        if not os.path.exists(self.visitor_file_path):
            with open(self.visitor_file_path, 'a') as file:
                headers = 'serial_no,date_time_stamp,name,phone,address,whome_to_meet,purpose\n'
                file.write(headers)
                print('FileHelper Initialized for the First Time')
        else:
            print('FileHelper Initialized')

    def write_in_file(self, content):
        with open(self.visitor_file_path, 'a') as file:
            file.write(content)
            print('Visitor Saved.')

    def read_file(self):
        with open(self.visitor_file_path, 'r') as file:
            lines = file.readlines()
            print('Total Logs:', len(lines) - 1)  # Exclude header
            for line in lines:
                print(line.strip())

    def lines_in_file(self):
        with open(self.visitor_file_path, 'r') as file:
            lines = file.readlines()
            return len(lines)


# APPLICATION :


class VisitorApp:
    def __init__(self):
        self.file_helper = FileHelper()
        print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
        print("Welcome to Visitor Log Book App")
        print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')

    def show_menu(self):
        while True:
            print('~~~~~~~~~~Select Option~~~~~~~~~~')
            print("1: Log a Visit")
            print("2: View Visit Log Book")
            print("3: Quit")
            print('~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~')
            try:
                choice = int(input('Enter Your Choice: '))
            except ValueError:
                print("Invalid input. Please enter a number.")
                continue

            if choice == 1:
                visitor = Visitor()
                visitor.serial_no = self.file_helper.lines_in_file()  # Set serial_no based on line count
                visitor.input_visitor_details()
                self.file_helper.write_in_file(str(visitor))
            elif choice == 2:
                self.file_helper.read_file()
            elif choice == 3:
                print("Thank you for using the app.")
                break
            else:
                print("Invalid Menu Option")
# main file

def main():
    app = VisitorApp()
    app.show_menu()

if __name__ == '__main__':
    main()
